#include <SD.h> // Include the SD library for working with SD cards
#include <SPI.h> // Include the SPI library for communicating with SD cards

const int sensorPin1 = A0; // Analog pin for sensor 1
const int sensorPin2 = A1; // Analog pin for sensor 2
const int sensorPin3 = A2; // Analog pin for sensor 3
const int sensorPin4 = A3; // Analog pin for sensor 4

const int chipSelect = 10; // Pin for the SD card module chip select

File dataFile; // File object to handle writing to the SD card

void setup() {
  Serial.begin(9600);

  // Initialize SD card
  if (!SD.begin(chipSelect)) {
    Serial.println("SD card initialization failed!");
    return;
  }
  Serial.println("SD card initialized.");

  // Create a new file on the SD card
  dataFile = SD.open("sensor_data.csv", FILE_WRITE);
  if (!dataFile) {
    Serial.println("Error opening file!");
    return;
  }
  // Write header to the CSV file
  dataFile.println("Sensor1,Sensor2,Sensor3,Sensor4");
  dataFile.close();
}

void loop() {
  // Read sensor values
  int sensorValue1 = analogRead(sensorPin1);
  int sensorValue2 = analogRead(sensorPin2);
  int sensorValue3 = analogRead(sensorPin3);
  int sensorValue4 = analogRead(sensorPin4);

  // Append sensor data to CSV file
  dataFile = SD.open("sensor_data.csv", FILE_WRITE);
  if (dataFile) {
    dataFile.print(sensorValue1);
    dataFile.print(",");
    dataFile.print(sensorValue2);
    dataFile.print(",");
    dataFile.print(sensorValue3);
    dataFile.print(",");
    dataFile.println(sensorValue4);
    dataFile.close();
  } else {
    Serial.println("Error opening file for writing!");
  }

  delay(1000); // Adjust the delay as needed
}
